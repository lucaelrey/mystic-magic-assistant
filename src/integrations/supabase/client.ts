
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://sdvenbtlvyrmkejtbrnj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InNkdmVuYnRsdnlybWtlanRicm5qIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzY3NzY2MjQsImV4cCI6MjA1MjM1MjYyNH0.dD1xmEmVcUyD1D9qEjVJyIQHMcsh3rnG6MIjsNWfCn8";

// This is a mock implementation to prevent breaking changes
export const supabase = {
  from: () => ({
    select: () => ({
      eq: () => ({
        eq: () => ({
          order: () => ({
            single: async () => ({ data: null, error: null }),
            then: async () => ({ data: [], error: null })
          }),
          then: async () => ({ data: [], error: null })
        }),
        order: () => ({
          then: async () => ({ data: [], error: null })
        }),
        then: async () => ({ data: [], error: null })
      }),
      order: () => ({
        then: async () => ({ data: [], error: null })
      }),
      then: async () => ({ data: [], error: null })
    }),
    insert: () => ({
      select: () => ({
        single: async () => ({ data: null, error: null })
      })
    }),
    update: () => ({
      eq: () => ({
        then: async () => ({ data: null, error: null })
      })
    }),
    upsert: () => ({
      onConflict: () => ({
        then: async () => ({ data: null, error: null })
      })
    })
  }),
  auth: {
    getSession: async () => ({ data: { session: null } }),
    onAuthStateChange: () => ({ 
      data: { 
        subscription: { 
          unsubscribe: () => {} 
        } 
      } 
    }),
    signOut: async () => {}
  },
  rpc: async () => ({ data: true, error: null }),
  functions: {
    invoke: async () => ({ data: null, error: null })
  }
};
